pred precondition_Lista_remove_m
[
  indice:JavaPrimitiveIntegerValue,
  values:JavaPrimitiveIntegerValue->lone JavaPrimitiveIntegerValue
]{  not (no indice.values)
}

pred postcondition_Lista_remove_m
[
  indice:JavaPrimitiveIntegerValue, 
  values:JavaPrimitiveIntegerValue->lone JavaPrimitiveIntegerValue,
  values':JavaPrimitiveIntegerValue->lone JavaPrimitiveIntegerValue,
  ret: JavaPrimitiveIntegerValue
]
{

  sequence[values] and sequence[values']  and

  pred_java_primitive_integer_value_eq[ret,indice.values]  

and 

 (all a,b:JavaPrimitiveIntegerValue | (a->b) in values implies 
	(( pred_java_primitive_integer_value_lt[a,indice] implies (a->b) in  values') and
	 ( pred_java_primitive_integer_value_gt[a,indice] implies (fun_java_primitive_integer_value_sub[a,i321]->b) in values'))
) and 
  JavaPrimitiveIntegerValue.values' + indice.values = JavaPrimitiveIntegerValue.values  

and (some size:JavaPrimitiveIntegerValue | myseq_card[values,size] and  not (((fun_java_primitive_integer_value_sub[size,i321])->JavaPrimitiveIntegerValue) in values') ) 

}


act Lista_remove_m[
   /*in*/intJ_1:JavaPrimitiveIntegerValue,
   /*inout*/thisType_1:JavaPrimitiveIntegerValue->lone JavaPrimitiveIntegerValue,
   /*out*/return_intJ_1:JavaPrimitiveIntegerValue] 
{  
   pre { precondition_Lista_remove_m[intJ_1,thisType_1] }
   post { postcondition_Lista_remove_m[intJ_1,thisType_1,thisType_1',return_intJ_1'] }
}/*scope:1*/



